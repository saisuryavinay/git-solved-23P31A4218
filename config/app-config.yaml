# DevOpsSimulator configuration
# - Stable production settings are primary.
# - Experimental features are provided commented-out and behind a feature flag.
# - Experimental features are NOT production-ready. Enable only in testing environments.

application:
  name: DevOpsSimulator
  version: 1.0.0                # production version (primary)
  environment: production
  # NOTE: Experimental builds (e.g. "3.0.0-experimental") are available below
  # but must be enabled explicitly via feature_flags.experimental_enabled.

server:
  host: 0.0.0.0
  port: 8080
  ssl_enabled: true
  # If you want to run development server locally, enable development.enabled below.

logging:
  level: INFO
  format: json
  # For experimental structured logging, see the commented/flagged block below.

# Development configuration (disabled by default; enable with environment variable)
development:
  enabled: false
  port: 3000
  hot_reload: false
  debug_mode: false
  mock_apis: false

# Feature flags (use these to turn on non-production features safely)
feature_flags:
  experimental_enabled: false   # set to true ONLY in testing or isolated environments
  # When experimental_enabled = true, experimental.* settings below will be applied
  # (ensure backward compatibility and perform necessary migration steps).

# ---- Experimental configuration (kept separate) ----
# The block below is intentionally preserved for reference.
# It is NOT active unless:
#  - you set feature_flags.experimental_enabled: true  OR
#  - you uncomment and merge these values into the production blocks manually.
#
# Experimental features are not production-ready. Expect breaking changes and higher
# resource requirements. Use in a dedicated testing environment only.

# experimental:
#   application:
#     name: DevOpsSimulator
#     version: 3.0.0-experimental
#     environment: testing
#     experimental_mode: true
#
#   server:
#     host: 0.0.0.0
#     port: 9000
#     ssl_enabled: true
#     multi_port: [9000, 9001, 9002]
#
#   logging:
#     level: TRACE
#     format: structured
#     output: /var/log/experimental.log
#     ai_analysis: enabled
#
#   database:
#     host: cluster.example.com
#     port: 5432
#     name: devops_experimental
#     distributed: true
#
#   features:
#     auto_scaling: advanced
#     load_balancer: ai-optimized
#     backup_enabled: true
#     chaos_engineering: enabled
#
#   ai_features:
#     predictive_scaling: true
#     anomaly_detection: true
#     auto_optimization: true
#     model_version: "v2.1.0"
#
#   cloud_providers:
#     - aws
#     - azure
#     - gcp
#     - digitalocean
#
#   security:
#     zero_trust: enabled
#     encryption: AES-256
#     audit_logging: comprehensive

# ---- Compatibility & migration notes ----
# - Keep production 'logging.level' at INFO or higher in prod to avoid excessive logs.
# - If enabling experimental database/distributed mode, ensure backward-compatible schemas
#   and backups are in place.
# - Any experimental ai_features should be tested in staging; monitor resource usage.
# - To promote an experimental config to production:
#   1) Run thorough tests in a staging environment with feature_flags.experimental_enabled=true
#   2) Migrate DB schemas with compatibility mode
#   3) Increment application.version and update changelog
