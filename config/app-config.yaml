# DevOpsSimulator configuration
# - Stable production settings are primary.
# - Experimental features are preserved below (commented) and gated by feature_flags.experimental_enabled.
# - Experimental features are NOT production-ready. Enable only in testing/staging environments.

application:
  name: DevOpsSimulator
  version: 1.0.0                # production version (primary)
  environment: production
  # experimental_version: 3.0.0-experimental  # reference only

server:
  host: 0.0.0.0
  port: 8080
  ssl_enabled: true

logging:
  level: INFO
  format: json

# Development configuration (disabled by default; enable with environment variable)
development:
  enabled: false
  port: 3000
  hot_reload: false
  debug_mode: false
  mock_apis: false

# Feature flags (use these to turn on non-production features safely)
feature_flags:
  experimental_enabled: false   # set to true ONLY in testing or isolated environments

# ---- Experimental configuration (kept separate and commented) ----
# To apply experimental settings at runtime:
#  - Option A: Set feature_flags.experimental_enabled: true in this file (only for testing)
#  - Option B: Use your config loader to merge the commented "experimental" block when the flag is set
# NOTE: The block below is intentionally commented out to avoid accidental activation in prod.

# experimental:
#   application:
#     name: DevOpsSimulator
#     version: 3.0.0-experimental
#     environment: testing
#     experimental_mode: true
#
#   server:
#     host: 0.0.0.0
#     port: 9000
#     ssl_enabled: true
#     multi_port: [9000, 9001, 9002]
#
#   logging:
#     level: TRACE
#     format: structured
#     output: /var/log/experimental.log
#     ai_analysis: enabled
#
#   database:
#     host: cluster.example.com
#     port: 5432
#     name: devops_experimental
#     distributed: true
#
#   features:
#     auto_scaling: advanced
#     load_balancer: ai-optimized
#     backup_enabled: true
#     chaos_engineering: enabled
#
#   ai_features:
#     predictive_scaling: true
#     anomaly_detection: true
#     auto_optimization: true
#     model_version: "v2.1.0"
#
#   cloud_providers:
#     - aws
#     - azure
#     - gcp
#     - digitalocean
#
#   security:
#     zero_trust: enabled
#     encryption: AES-256
#     audit_logging: comprehensive

# ---- Notes & recommended usage ----
# - Keep production 'logging.level' at INFO or higher in production to avoid excessive logs.
# - When enabling experimental.database or distributed DB modes, ensure you have tested
#   backups and schema migration paths.
# - Implement your application config loader so, when feature_flags.experimental_enabled == true,
#   it safely merges the experimental.* settings into runtime configuration (instead of uncommenting
#   this file manually).
# - For Kubernetes / Docker deployments, prefer toggling experimental flags via environment variables
#   or separate secrets/configmaps per environment rather than editing this file in place.
